{
    "swagger": "2.0",
    "info": {
      "title": "Latão Airlines",
      "version": "1.0.0"
    },
    "host": "localhost:3000",
    "schemes": ["http"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "tags": [
        {
            "name": "user"
        },
        {
            "name": "card"
        },
        {
            "name": "destination"
        },
        {
            "name": "flight"
        }],
    "paths": {
      "/user/login": {
        "post": {
          "tags": ["user"],
          "summary": "Faz o login",
          "description": "Verifica as credenciais, gera e retorna um token",
          "parameters": [{
            "name": "userLogin",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userLogin"
            }
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/token"
              }
            },
            "401": {
              "description": "Credenciais inválidas"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/user/register": {
        "post": {
          "tags": ["user"],
          "summary": "Cria usuário",
          "description": "Cria usuário e retorna token",
          "consumes": ["application/json"],
          "parameters": [{
            "name": "userDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRequest"
            }
          }],
          "responses": {
            "201": {
              "description": "Criado com sucesso",
              "schema": {
                "$ref": "#/definitions/token"
              }
            },
            "409": {
              "description": "CPF já registrado"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/user": {
        "get": {
          "tags": ["user"],
          "summary": "Retorna os dados do usuário",
          "description": "Retorna os dados do usuário pelo token",
          "parameters": [{
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "Dados retornados com sucesso",
              "schema": {
                "$ref": "#/definitions/userData"
              }
            },
            "401": {
              "description": "Token inválido ou expirado"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "put": {
          "tags": ["user"],
          "summary": "Altera dados do usuário",
          "consumes": ["application/json"],
          "parameters": [{
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userRequest"
            }
          }, {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Alterado com sucesso",
              "schema": {
                "$ref": "#/definitions/userResponse"
              }
            },
            "401": {
              "description": "Token inválido ou expirado"
            },
            "404": {
              "description": "Usuário não encontrado"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "delete": {
          "tags": ["user"],
          "summary": "Deleta o usuário",
          "produces": ["application/json"],
          "parameters": [{
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Deletado com sucesso",
              "schema": {
                "example": "User deleted sucessfully."
              }
            },
            "401": {
              "description": "Token inválido ou expirado"
            },
            "404": {
              "description": "Usuário não encontrado"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/user/flight": {
        "get": {
          "tags": ["user"],
          "summary": "Retorna uma lista com os flights do usuário",
          "produces": ["application/json"],
          "parameters": [{
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/flight"
                }
              }
            }
          }
        }
      },
      "/user/flight/{flightId}": {
        "post": {
          "tags": ["user"],
          "summary": "Adiciona um flight na lista do usuário",
          "parameters": [{
            "name": "flightDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userFlight"
            }
          }, {
            "name": "flightId",
            "in": "path",
            "required": true,
            "type": "string"
          }, {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/card"
              }
            }
          }
        }
      },
      "/user/verificate": {
        "post": {
          "tags": ["user"],
          "summary": "",
          "parameters": [{
            "name": "passwordDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/passwordDto"
            }
          }],
          "responses": {
            "200": {
              "description": "Sucesso"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/card/{userId}": {
        "get": {
          "tags": ["card"],
          "summary": "Retorna todos os cartão do usuário",
          "parameters": [{
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/card"
                }
              }
            },
            "404": {
              "description": "Usuário não encontrado"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "post": {
          "summary": "Adiciona um cartão a conta do usuário",
          "tags": ["card"],
          "parameters": [{
            "name": "cardDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardDto"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/card"
              }
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/card/{userId}/{cardId}": {
        "get": {
          "tags": ["card"],
          "summary": "Retorna um cartão específico do usuário",
          "parameters": [{
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/card"
              }
            },
            "404": {
              "description": "Card not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "put": {
          "tags": ["card"],
          "summary": "Altera valores do cartão específico",
          "parameters": [
          {
            "name": "cardDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/cardDto"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/card"
              }
            },
            "404": {
              "description": "Card not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "delete": {
          "tags": ["card"],
          "summary": "Delete cartão específico",
          "parameters": [{
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso"
            },
            "404": {
              "description": "Card not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/destination": {
        "get": {
          "tags": ["destination"],
          "summary": "Retorna todos os destinos",
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/destination"
                }
              }
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "post": {
          "tags": ["destination"],
          "summary": "Salva um novo destino",
          "parameters": [{
            "name": "destinationDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinationDto"
            }
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/destination"
              }
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/destination/{destinationId}": {
        "get": {
          "tags": ["destination"],
          "summary": "Retorna um destination específico",
          "parameters": [{
            "name": "destinationId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/destination"
              }
            },
            "404": {
              "description": "Destination not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "put": {
          "tags": ["destination"],
          "summary": "Altera os dados de um destination específico",
          "parameters": [{
            "name": "destinationDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/destinationDto"
            }
          },
          {
          "name": "destinationId",
          "in": "path",
          "required": true,
          "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/destination"
              }
            },
            "404": {
              "description": "Destination not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "delete": {
          "tags": ["destination"],
          "summary": "Exclui um destination específico",
          "parameters": [{
            "name": "destinationId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso"
            },
            "404": {
              "description": "Destination not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      },
      "/flight": {
        "get": {
          "tags": ["flight"],
          "summary": "Retorna todos os flights",
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/flight"
                }
              }
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "post": {
          "tags": ["flight"],
          "summary": "Salva um novo flight",
          "parameters": [{
            "name": "flightDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flightDto"
            }
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/flight"
              }
            }
          }
        }
      },
      "/flight/{flightId}": {
        "get": {
          "tags": ["flight"],
          "summary": "Retorna um flight específico",
          "parameters": [{
            "name": "flightId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "200",
              "schema": {
                "$ref": "#/definitions/flight"
              }
            },
            "404": {
              "description": "Flight not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "put": {
          "tags": ["flight"],
          "summary": "Altera os dados de um flight específico",
          "parameters": [{
            "name": "flightDto",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/flightDto"
            }
          },
          {
            "name": "flightId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso",
              "schema": {
                "$ref": "#/definitions/flight"
              }
            },
            "404": {
              "description": "Flight not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        },
        "delete": {
          "tags": ["flight"],
          "summary": "Exclui um flight específico",
          "parameters": [{
            "name": "flightId",
            "in": "path",
            "required": true,
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "Sucesso"
            },
            "404": {
              "description": "Flight not found"
            },
            "500": {
              "description": "Erro"
            }
          }
        }
      }
    },
    "definitions": {
      "passwordDto": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "example": "123"
          }
        }
      },
      "flightDto": {
        "type": "object",
        "properties": {
          "price": {
            "type": "string",
            "example": "R$3000,00"
          },
          "place": {
            "type": "array",
            "example": {
              "user_id": "00000000-0000-0000-0000-000000000000",
              "user_places": ["1A", "2B"]
            }
          },
          "flightNumber": {
            "type": "number",
            "example": 98
          },
          "airportTag": {
            "type": "string",
            "example": "LT"
          },
          "company": {
            "type": "string",
            "example": "Latão Airlines"
          },
          "bagageWeight": {
            "type": "string",
            "example": "30kg"
          },
          "goingDate": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "returnDate": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "startDestinationId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "finalDestinationId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "flight": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "price": {
            "type": "string",
            "example": "R$3000,00"
          },
          "place": {
            "type": "array",
            "example": {
              "user_id": "00000000-0000-0000-0000-000000000000",
              "user_places": ["1A", "2B"]
            }
          },
          "flightNumber": {
            "type": "number",
            "example": 98
          },
          "airportTag": {
            "type": "string",
            "example": "LT"
          },
          "company": {
            "type": "string",
            "example": "Latão Airlines"
          },
          "bagageWeight": {
            "type": "string",
            "example": "30kg"
          },
          "goingDate": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "returnDate": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "startDestination": {
            "type": "object",
            "$ref": "#/definitions/destination"
          },
          "finalDestination": {
            "type": "object",
            "$ref": "#/definitions/destination"
          },
          "startDestinationId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "finalDestinationId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "destination": {
        "type": "object",
        "properties": {
          "_id": {
            "type":"string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "cityName": {
            "type": "string",
            "example": "São Paulo"
          },
          "zipcode": {
            "type": "string",
            "example": "21347829"
          },
          "cityTag": {
            "type": "string",
            "example": "SP"
          },
          "country": {
            "type": "string",
            "example": "Brasil"
          }
        }
      },
      "destinationDto": {
        "type": "object",
        "properties": {
          "cityName": {
            "type": "string",
            "example": "São Paulo"
          },
          "zipcode": {
            "type": "string",
            "example": "21347829"
          },
          "cityTag": {
            "type": "string",
            "example": "SP"
          },
          "country": {
            "type": "string",
            "example": "Brasil"
          }
        }
      },
      "cardDto": {
        "type": "object",
        "properties": {
          "securityNumber": {
            "type": "number",
            "example": 0
          },
          "cardNumber": {
            "type": "string",
            "example": "00000000000000000000"
          },
          "validity": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "propertyName": {
            "type": "string",
            "example": "Lucas Ceifa"
          },
          "userId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "card": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "securityNumber": {
            "type": "number",
            "example": 0
          },
          "cardNumber": {
            "type": "string",
            "example": "00000000000000000000"
          },
          "validity": {
            "type": "string",
            "format": "date",
            "example": "2019-12-24"
          },
          "propertyName": {
            "type": "string",
            "example": "Lucas Ceifa"
          },
          "userId": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          }
        }
      },
      "userFlight": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "example": "Lucas Trindade da Silva"
          },
          "cpf": {
            "type": "string",
            "example": "00000000000"
          },
          "age": {
            "type": "number",
            "example": 19
          },
          "address": {
            "type": "string",
            "example": "endereco ficticio"
          },
          "number": {
            "type": "string",
            "example": 24
          },
          "passportNumber": {
            "type": "string",
            "example": "31203123"
          },
          "flights_id": {
            "type": "array",
            "example": [ "00000000-0000-0000-0000-000000000000" ]
          }
        }
      },
      "userRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Lucas Trindade da Silva"
          },
          "password": {
            "type": "string",
            "example": "coxinha123"
          },
          "cpf": {
            "type": "string",
            "example": "00000000000"
          },
          "age": {
            "type": "number",
            "example": 19
          },
          "address": {
            "type": "string",
            "example": "endereco ficticio"
          },
          "number": {
            "type": "string",
            "example": 24
          },
          "passportNumber": {
            "type": "string",
            "example": "31203123"
          }
        }
      },
      "userResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "example": "Lucas Trindade da Silva"
          },
          "password": {
            "type": "string",
            "example": "coxinha123"
          },
          "cpf": {
            "type": "string",
            "example": "00000000000"
          },
          "age": {
            "type": "number",
            "example": 19
          },
          "address": {
            "type": "string",
            "example": "endereco ficticio"
          },
          "number": {
            "type": "string",
            "example": 24
          },
          "passportNumber": {
            "type": "string",
            "example": "31203123"
          },
          "flights_id": {
            "type": "array",
            "example": [ "00000000-0000-0000-0000-000000000000" ]
          }
        }
      },
      "userData": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "name": {
            "type": "string",
            "example": "Lucas Trindade da Silva"
          },
          "cpf": {
            "type": "string",
            "example": "00000000000"
          },
          "age": {
            "type": "number",
            "example": 19
          },
          "address": {
            "type": "string",
            "example": "endereco ficticio"
          },
          "number": {
            "type": "string",
            "example": 24
          },
          "passportNumber": {
            "type": "string",
            "example": "31203123"
          },
          "flights_id": {
            "type": "array",
            "example": [ "00000000-0000-0000-0000-000000000000" ]
          }
        }
      },
      "userLogin": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string",
            "example": "12390210311"
          },
          "password": {
            "type": "string",
            "example": "2j31j2@j2$"
          }
        }
      },
      "token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "example": "token_jwt"
          }
        }
      }
    }
  }
  